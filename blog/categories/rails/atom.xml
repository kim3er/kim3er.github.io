<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Adventures in brine]]></title>
  <link href="http://rich.k3r.me/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://rich.k3r.me/"/>
  <updated>2015-03-23T23:21:18+00:00</updated>
  <id>http://rich.k3r.me/</id>
  <author>
    <name><![CDATA[Richard Kimber]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Helpers as Partial Controllers]]></title>
    <link href="http://rich.k3r.me/blog/2015/01/31/helpers-as-partial-controllers/"/>
    <updated>2015-01-31T18:08:46+00:00</updated>
    <id>http://rich.k3r.me/blog/2015/01/31/helpers-as-partial-controllers</id>
    <content type="html"><![CDATA[<p>This is the first of what I expect will be a series of posts, about revelations that are entirely obvious in hindsight, but whose simplicity had eluded me for so long.</p>

<p>I came to Rails from ASP.NET MVC (have I told you about my <a href="http://www.amazon.co.uk/ASP-Net-MVC-Cookbook-Andrew-Siemer/dp/1849690308">book</a>), as part of a three pronged transition:</p>

<ol>
<li>Microsoft stack > Open source stack</li>
<li>IDE (VS2010) > Smart text editor (TextMate at the time, now Sublime Text 3)</li>
<li>Windows PC > Mac</li>
</ol>


<!--more-->


<p>The one thing I remember missing most when transitioning from ASP.NET MVC to Rails, was not being able to <a href="http://haacked.com/archive/2009/11/18/aspnetmvc2-render-action.aspx/">render actions</a> within a view. I&rsquo;m not going to regurgitate Phil Haack&rsquo;s example here (by the way, when did he start working at Github? He was part of my MS dream team). Basically, what we&rsquo;re talking about is rendering a partial that is attached to a controller. This way the logic is as portable as the partial itself, without putting logic into the actual partial; something I used a lot in ASP.NET MVC.</p>

<h2>Where there&rsquo;s a will there&rsquo;s a gem</h2>

<p>When I&rsquo;d convinced myself there wasn&rsquo;t a direct replacement for this functionality, I went about searching for a gem. What I found, was <a href="https://github.com/apotonick/cells">Cells</a>. This is about four years ago now, so I&rsquo;m happy to see the gem is still so active. It is pretty much a direct replacement for the functionality I was looking for and I did use it for a few projects. Thing is though, it wasn&rsquo;t really clicking with the other Rails devs I was working with.</p>

<p>I think maybe it was an &ldquo;against the grain&rdquo;, purest, &ldquo;this isn&rsquo;t the Rails way&rdquo; sort of reaction. But maybe they just saw what I couldn&rsquo;t; that there is a very easy way to accomplish my specific requirement. Either way, after the initial surge of wanting to use every gem under the sum, you gradually begin wanting to slim down your dependancies, and well, Cells didn&rsquo;t make the cut.</p>

<h2>So, to the point. Helpers</h2>

<p>Oh my god, it&rsquo;s so obvious now. For years I was ruefully sticking logic directly into my partial views, thinking &ldquo;Well, if I can&rsquo;t render actions, what else can I do?&rdquo;. What a doofus.</p>

<p>On a recent project, I was tired of the <code>locals</code> syntax of a partial I was using quite a lot.</p>

<pre><code class="ruby">render( partial: "path/to/partial", locals: { param_one: "something" } )
</code></pre>

<p>Really tiresome, I know. Anyway, as the partial was being used more, the logic being stuck into said partial was also increasing exponentially.</p>

<p>&#8220;` erb partial.html.erb
&lt;%
param_three = false unless defined?( param_three )</p>

<p>if param_two == &ldquo;Something&rdquo;
    param_one = &ldquo;Something incredibly hideous&rdquo;
end
%></p>

<p><p class="<%= "yuck" if param_three == true %>>
    &lt;%= &ldquo;#{param_two} - #{param_one}&rdquo; %>
</p>
&#8220;`</p>

<p>In spite of the disgrace my partial had become, what really irked me was having to type in <code>locals</code> every time I rendered the partial. &ldquo;I know, I&rsquo;ll put it into a helper method&rdquo;, I thought.</p>

<pre><code class="ruby something_helpers.rb">module SomethingHelpers

    def render_something(param_one, param_two, param_three = false)
        render( partial: "path/to/partial", locals: { param_one: param_one, param_two: param_two, param_three: param_three })
    end

end
</code></pre>

<p>And then the revelation, &ldquo;Hang on a minute, I can put my logic in here as well&rdquo;. Hello.</p>

<pre><code class="ruby something_helpers.rb">module SomethingHelpers

    def render_something(param_one, param_two, param_three = false)
        if param_two == "Something"
            param_one = "Something incredibly hideous"
        end

        text = "#{param_two} - #{param_one}"

        render( partial: "path/to/partial", locals: { text: text, param_three: param_three })
    end

end
</code></pre>

<pre><code class="erb partial.html.erb">&lt;p class="&lt;%= "yuck" if param_three == true %&gt;&gt;
    &lt;%= text %&gt;
&lt;/p&gt;
</code></pre>

<p>Seriously, sometimes I worry about me. I think I probably have this revelation every six months or so, then forget it. Hopefully after writing this, I won&rsquo;t forget again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RailsInstaller (Ruby 2.1) on Windows 8.1]]></title>
    <link href="http://rich.k3r.me/blog/2015/01/22/railsinstaller-ruby-2-dot-1-on-windows-8-dot-1/"/>
    <updated>2015-01-22T19:53:44+00:00</updated>
    <id>http://rich.k3r.me/blog/2015/01/22/railsinstaller-ruby-2-dot-1-on-windows-8-dot-1</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently had to get Rails and Capistrano up and running on a Windows 8.1 machine. These are the problems I encountered and how I fixed them. All issues were encountered after trying to run an existing Rails 4 project.</p>

<!--more-->


<p>My first step was to install Rails using <a href="http://railsinstaller.org">RailsInstaller</a>. This is a great first step for Windows users, as you also get Ruby, Git and DevKit (which is important for building gems that contain native code). I elected to install the Ruby 2.1 version, which at the time of install, was sporting Ruby 2.1.5.</p>

<h2>Invalid Certificate</h2>

<p>When running <code>bundle</code>, I encountered the following error:</p>

<pre><code class="bat">Unable to download data from https://rubygems.org/ - SSL_connect returned=1 errno=0 state=SSLv3
</code></pre>

<p>As per the accepted answer on this <a href="http://stackoverflow.com/questions/27435841/windows-7-64-bit-could-not-find-a-valid-gem-compass-0-here-is-why-unab">StackOverflow question</a>, I downloaded <a href="http://curl.haxx.se/ca/cacert.pem">cacert.pem</a> and placed it here, C:\RailsInstaller. You also need to tell <code>gem</code> where to find the certificate, which is done by setting a environment variable called <code>SSL_CERT_FILE</code>. This can be done on a temporary basis by typing the following into Command Prompt&#8221;:</p>

<pre><code class="bat">set SSL_CERT_FILE=C:\RailsInstaller\cacert.pem
</code></pre>

<h2>Sqlite Native</h2>

<p>Running any command related to the local Sqlite db, threw up:</p>

<pre><code class="bat">cannot load such file -- sqlite3/sqlite3_native
</code></pre>

<p>According to this <a href="http://stackoverflow.com/questions/26636471/windows-ruby-rails-install-cannot-load-such-file-sqlite3-sqlite3-native">accepted answer</a>, the problem is caused by the version of the <code>sqlite3</code> gem not supporting Ruby 2.1.3+ on Windows. The gem needed to be updated to at least 1.3.10.</p>

<h2>Bcrypt</h2>

<p>I encountered a similar problem with the <code>bcrypt</code> gem. I didn&rsquo;t record the nature of the problem, but updating to at least 3.1.7 resolved the issue.</p>

<h2>TZInfo</h2>

<p>When starting up the Rails server, I received an error relating to <code>TZInfo::DataSourceNotFound</code>. According to the accepted answer on this <a href="http://stackoverflow.com/questions/23022258/tzinfodatasourcenotfound-error-starting-rails-v4-1-0-server-on-windows">question</a>, Windows needs an additional gem for the <code>tzinfo</code> gem to work correctly. Add this to your <code>Gemfile</code>:</p>

<pre><code class="ruby">gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw]
</code></pre>

<h2>NPM Error</h2>

<p>For bonus points, I always install Node along with my Rails installations, if only for JavaScript compilation in Sprockets. Node is best installed using the binary from the official <a href="http://nodejs.org/">website</a>.</p>

<p>Typing <code>npm</code> into Command Prompt for the first time, returned the following:</p>

<pre><code class="bat">Error: ENOENT, stat 'C:\Users\[Username Here]\AppData\Roaming\npm
</code></pre>

<p>This issue was resolved by creating the missing <code>npm</code> folder in <code>Roaming</code>. Credit goes to the accepted answer of this <a href="http://stackoverflow.com/questions/25093276/node-js-windows-error-enoent-stat-c-users-rt-appdata-roaming-npm">question</a>.</p>

<h2>Capistrano</h2>

<p>On the first day of setup, Capistrano worked like a dream. The following day, after a system restart, no dice. Capistrano tasks kept dying with the following:</p>

<pre><code class="bat">Error reading response length from authentication socket
</code></pre>

<p>I tried reinstalling certificates and ensured the SSH Agent was running, to no avail. I still don&rsquo;t completely understand the problem, but I think the solution has more to do with the PC&rsquo;s specific environment.</p>

<p><a href="http://www.sourcetreeapp.com/">SourceTree</a> was already installed (and running) on the PC, when I came to install Rails. As part of the installation, SourceTree installs <a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html">Pageant</a>, a Windows based SSH authentication tool.</p>

<p>Basically, Capistrano started working again the moment I had the presence of mind to start Pageant again.</p>

<p><em>NOTE: The PC has two sets of SSH keys setup, one through Pageant, the other through <a href="https://msysgit.github.io/">Msysgit</a>. I thought I&rsquo;d been using the Msysgit key, but I suspect I was using the Pageant one all along. For Capistrano at least, Git works from the command line, regardless of the status of Pageant.</em></p>

<p>I&rsquo;m not aware of any dependancy on Pageant by RailsInstaller. So I wonder whether I wouldn&rsquo;t have this dependancy now, if I didn&rsquo;t already have Pageant on the system. Or possibly, I&rsquo;d have struggled getting Capistrano working at all, not appreciating the need for Pageant.</p>

<h2>Line Endings</h2>

<p>I&rsquo;m still not 100% clear what happened here. We manage a number of GIT repos on Windows &amp; Mac, and have not had this issue before. Upon committing changes to a project, from the Windows machine, all the line endings were converted to CRLF. This caused problems with Rake. My inital attempts to fix the issue on a Mac resulted in me corrupting the Sqlite3 development database, so for the remainder of this fix, assume I&rsquo;ve temporarily moved the db (along with all other binary files, i.e. images) out of the directory structure.</p>

<p>From the project root, on a Mac, I ran the following:</p>

<pre><code class="bash">find . -type f -not -path "./.git/*" -exec perl -pi -e 's/\r\n|\n|\r/\n/g' {} \;
</code></pre>

<p>From Linux, you can run:</p>

<pre><code class="bash">find . -type f -not -path "./.git/*" -exec dos2unix {} \;
</code></pre>

<p>The above, replaces CRLF with LF for all files in the GIT repo.</p>

<p>After readding the database, I ran <code>rails server</code> to check for obvious issues; all seemed well. As per this <a href="https://help.github.com/articles/dealing-with-line-endings/#platform-windows">Github article</a>, I ran the following on the Windows machine:</p>

<pre><code class="bat">git config --global core.autocrlf true
</code></pre>

<p>The above, gets GIT to manage line endings on Windows machines, to keep them in sync with GIT&rsquo;s base line ending (LF).</p>
]]></content>
  </entry>
  
</feed>
