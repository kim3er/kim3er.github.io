<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tips | Adventures in brine]]></title>
  <link href="http://rich.k3r.me/blog/categories/tips/atom.xml" rel="self"/>
  <link href="http://rich.k3r.me/"/>
  <updated>2015-04-12T14:29:21+01:00</updated>
  <id>http://rich.k3r.me/</id>
  <author>
    <name><![CDATA[Richard Kimber]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shutting the World Out]]></title>
    <link href="http://rich.k3r.me/blog/2015/01/22/shutting-the-world-out/"/>
    <updated>2015-01-22T20:18:34+00:00</updated>
    <id>http://rich.k3r.me/blog/2015/01/22/shutting-the-world-out</id>
    <content type="html"><![CDATA[<p>There is never enough time. Last year in particular, it always felt like there wasn&rsquo;t enough time in the day.  Running a company, where your work is also the primary source of income, is no easy task. I was always looking for ways of squeezing more hours out of day; tweaking processes, finding better tools, writing scripts. It&rsquo;s become a bit of an obsession for me, finding &ldquo;better&rdquo; ways to get more stuff done. I was pretty good at it, I think I still am. But as the end of last year drew in, it became clear that I was spreading myself too thin.</p>

<!--more-->


<p>I was a manager, a sales person, a support desk, a developer, and was switching these hats constantly throughout the day. My goal on any given day, was to get to the end of the day without any major mishaps. If I managed to progress at all, in terms of significant progression of a project or a more efficient way of doing something, well that was amazing.</p>

<p>The problem was concentration, I couldn&rsquo;t stay focused on a single task, without being distracted by someone or something craving my attention. We experimented with a few different ways of tackling this:</p>

<ol>
<li>Switching off access to email at specific parts of the day.</li>
<li>We decided that I should not answer the phone.</li>
<li>Further than this, I wouldn&rsquo;t participate in a phone call unless it was me that initiated it. If someone wanted to talk to me, a time would be arranged for me to ring them back.</li>
<li>Allocated time to perform specific tasks.</li>
</ol>


<p>These feel obvious to me now, but they weren&rsquo;t back then and had a huge impact on my ability to get through work. Even combined though, these were not the silver bullets I was after. I&rsquo;m too nosey for one thing, if someone else picked up the phone, my ears would prick up, brain on overdrive wondering what they wanted and were the requirements being dealt with correctly. And who can blame me, it&rsquo;s my company after all.</p>

<p>I needed a way of maintaining concentration, without completely removing myself from the office. My salvation came in another, now startlingly obvious, epiphany; headphones. It&rsquo;d never really occurred to me in the past to try headphones, because in the past I&rsquo;ve typically opted for in-ear earphones, which are uncomfortable over long periods of time. I&rsquo;m also pretty negative on headphones in an office environment as rule, because I hate sound leakage. But I didn&rsquo;t see that I had an option and it&rsquo;s made the world of difference. <a href="http://rich.k3r.me/blog/2015/01/20/finding-a-pair-of-headphones/">My earphones</a> use noise reduction to completely immerse me in the task at hand.</p>

<p>An unexpected and corny side effect of the headphones has been trust. I am nosey because I believe I need to be involved in every decision, that my opinion always needs to be considered. Switching on the headphones has demonstrated to me that  I&rsquo;m not (always) the centre of the universe, and that many facets of the company can run without my constant interference.</p>

<p>I&rsquo;m okay with that, because I spend a lot more time on the stuff I like doing now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RailsInstaller (Ruby 2.1) on Windows 8.1]]></title>
    <link href="http://rich.k3r.me/blog/2015/01/22/railsinstaller-ruby-2-dot-1-on-windows-8-dot-1/"/>
    <updated>2015-01-22T19:53:44+00:00</updated>
    <id>http://rich.k3r.me/blog/2015/01/22/railsinstaller-ruby-2-dot-1-on-windows-8-dot-1</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve recently had to get Rails and Capistrano up and running on a Windows 8.1 machine. These are the problems I encountered and how I fixed them. All issues were encountered after trying to run an existing Rails 4 project.</p>

<!--more-->


<p>My first step was to install Rails using <a href="http://railsinstaller.org">RailsInstaller</a>. This is a great first step for Windows users, as you also get Ruby, Git and DevKit (which is important for building gems that contain native code). I elected to install the Ruby 2.1 version, which at the time of install, was sporting Ruby 2.1.5.</p>

<h2>Invalid Certificate</h2>

<p>When running <code>bundle</code>, I encountered the following error:</p>

<pre><code class="bat">Unable to download data from https://rubygems.org/ - SSL_connect returned=1 errno=0 state=SSLv3
</code></pre>

<p>As per the accepted answer on this <a href="http://stackoverflow.com/questions/27435841/windows-7-64-bit-could-not-find-a-valid-gem-compass-0-here-is-why-unab">StackOverflow question</a>, I downloaded <a href="http://curl.haxx.se/ca/cacert.pem">cacert.pem</a> and placed it here, C:\RailsInstaller. You also need to tell <code>gem</code> where to find the certificate, which is done by setting a environment variable called <code>SSL_CERT_FILE</code>. This can be done on a temporary basis by typing the following into Command Prompt&#8221;:</p>

<pre><code class="bat">set SSL_CERT_FILE=C:\RailsInstaller\cacert.pem
</code></pre>

<h2>Sqlite Native</h2>

<p>Running any command related to the local Sqlite db, threw up:</p>

<pre><code class="bat">cannot load such file -- sqlite3/sqlite3_native
</code></pre>

<p>According to this <a href="http://stackoverflow.com/questions/26636471/windows-ruby-rails-install-cannot-load-such-file-sqlite3-sqlite3-native">accepted answer</a>, the problem is caused by the version of the <code>sqlite3</code> gem not supporting Ruby 2.1.3+ on Windows. The gem needed to be updated to at least 1.3.10.</p>

<h2>Bcrypt</h2>

<p>I encountered a similar problem with the <code>bcrypt</code> gem. I didn&rsquo;t record the nature of the problem, but updating to at least 3.1.7 resolved the issue.</p>

<h2>TZInfo</h2>

<p>When starting up the Rails server, I received an error relating to <code>TZInfo::DataSourceNotFound</code>. According to the accepted answer on this <a href="http://stackoverflow.com/questions/23022258/tzinfodatasourcenotfound-error-starting-rails-v4-1-0-server-on-windows">question</a>, Windows needs an additional gem for the <code>tzinfo</code> gem to work correctly. Add this to your <code>Gemfile</code>:</p>

<pre><code class="ruby">gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw]
</code></pre>

<h2>NPM Error</h2>

<p>For bonus points, I always install Node along with my Rails installations, if only for JavaScript compilation in Sprockets. Node is best installed using the binary from the official <a href="http://nodejs.org/">website</a>.</p>

<p>Typing <code>npm</code> into Command Prompt for the first time, returned the following:</p>

<pre><code class="bat">Error: ENOENT, stat 'C:\Users\[Username Here]\AppData\Roaming\npm
</code></pre>

<p>This issue was resolved by creating the missing <code>npm</code> folder in <code>Roaming</code>. Credit goes to the accepted answer of this <a href="http://stackoverflow.com/questions/25093276/node-js-windows-error-enoent-stat-c-users-rt-appdata-roaming-npm">question</a>.</p>

<h2>Capistrano</h2>

<p>On the first day of setup, Capistrano worked like a dream. The following day, after a system restart, no dice. Capistrano tasks kept dying with the following:</p>

<pre><code class="bat">Error reading response length from authentication socket
</code></pre>

<p>I tried reinstalling certificates and ensured the SSH Agent was running, to no avail. I still don&rsquo;t completely understand the problem, but I think the solution has more to do with the PC&rsquo;s specific environment.</p>

<p><a href="http://www.sourcetreeapp.com/">SourceTree</a> was already installed (and running) on the PC, when I came to install Rails. As part of the installation, SourceTree installs <a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html">Pageant</a>, a Windows based SSH authentication tool.</p>

<p>Basically, Capistrano started working again the moment I had the presence of mind to start Pageant again.</p>

<p><em>NOTE: The PC has two sets of SSH keys setup, one through Pageant, the other through <a href="https://msysgit.github.io/">Msysgit</a>. I thought I&rsquo;d been using the Msysgit key, but I suspect I was using the Pageant one all along. For Capistrano at least, Git works from the command line, regardless of the status of Pageant.</em></p>

<p>I&rsquo;m not aware of any dependancy on Pageant by RailsInstaller. So I wonder whether I wouldn&rsquo;t have this dependancy now, if I didn&rsquo;t already have Pageant on the system. Or possibly, I&rsquo;d have struggled getting Capistrano working at all, not appreciating the need for Pageant.</p>

<h2>Line Endings</h2>

<p>I&rsquo;m still not 100% clear what happened here. We manage a number of GIT repos on Windows &amp; Mac, and have not had this issue before. Upon committing changes to a project, from the Windows machine, all the line endings were converted to CRLF. This caused problems with Rake. My inital attempts to fix the issue on a Mac resulted in me corrupting the Sqlite3 development database, so for the remainder of this fix, assume I&rsquo;ve temporarily moved the db (along with all other binary files, i.e. images) out of the directory structure.</p>

<p>From the project root, on a Mac, I ran the following:</p>

<pre><code class="bash">find . -type f -not -path "./.git/*" -exec perl -pi -e 's/\r\n|\n|\r/\n/g' {} \;
</code></pre>

<p>From Linux, you can run:</p>

<pre><code class="bash">find . -type f -not -path "./.git/*" -exec dos2unix {} \;
</code></pre>

<p>The above, replaces CRLF with LF for all files in the GIT repo.</p>

<p>After readding the database, I ran <code>rails server</code> to check for obvious issues; all seemed well. As per this <a href="https://help.github.com/articles/dealing-with-line-endings/#platform-windows">Github article</a>, I ran the following on the Windows machine:</p>

<pre><code class="bat">git config --global core.autocrlf true
</code></pre>

<p>The above, gets GIT to manage line endings on Windows machines, to keep them in sync with GIT&rsquo;s base line ending (LF).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Half-arsed Working Techniques]]></title>
    <link href="http://rich.k3r.me/blog/2014/12/21/half-arsed-working-techniques/"/>
    <updated>2014-12-21T11:21:41+00:00</updated>
    <id>http://rich.k3r.me/blog/2014/12/21/half-arsed-working-techniques</id>
    <content type="html"><![CDATA[<h2>TL;DR</h2>

<p>&ldquo;Half-arsed&rdquo;, as in reducing possibility of getting a fat arse by working more efficiently.  It&rsquo;s a pun, I&rsquo;m funny like that.</p>

<h2>Introduction</h2>

<p>I recently watched this video <a href="http://youtu.be/uiKg6JfS658">Are You Sitting Too Much?</a> and the followup <a href="http://youtu.be/4K_ENbRgywY">9 Tips To Save Your Life</a>. Please watch them if you sit for long periods of time, they&rsquo;re not long and you learn a lot.</p>

<p>I really had no idea, which is irritating because it makes perfect sense. It makes perfect sense, because even in my ignorance, I have already seen the benefits yielded from breaking up my work. Having unwittingly lost half a stone this year, without changing my diet (next year&rsquo;s resolution).</p>

<!--more-->


<p>The tips in the second video are insightful, but didn&rsquo;t really speak to my specific situation. So, I&rsquo;ve come up with a few ideas for how I might tackle the issue.</p>

<h2>Use a Timer</h2>

<p>We use a service called <a href="https://letsfreckle.com/">Freckle</a> to track the time we spend on projects. On the Mac app at least, the timer beeps once an hour; this I believe is there to indicate that the timer is still running. It seems to me though, that it is also a great reminder to get up and stretch your legs for five minutes.</p>

<p>Now, while I adore Freckle and it&rsquo;s beautiful reporting, it is quite expensive. $49 per month for a team of five. I strive for greater efficiency, if only so one day I feel I can survive the week without Freckle. It is certainly too much to spend on a simple timer to remind you to get up and have a wander.</p>

<p>If I was without Freckle and facing this issue, I&rsquo;d recognise my personal cycles of work differ at different times during the day. That is to say, that I would be much aggrieved if I was interrupted from my work after a mere hour, first thing in the morning, but would take such a distraction as a blessing mid-afternoon. Instead, I&rsquo;d chop my day into sprints of different lengths, and set up timers accordingly. This would have the extra benefit of adding a bit more structure to my day, by understanding when I&rsquo;m more effective at longer or shorter tasks.</p>

<h2>Work Standing</h2>

<p>I&rsquo;ve long enjoyed the idea of these adjustable desks, that allow you to work seated or standing. They are very expensive though and I wonder how I would actually get on coding for long periods of time, while standing.</p>

<p>Coding aside, I think a lot of activities can benefit from standing.</p>

<h3>Catch Up Meetings</h3>

<p>The most obvious example is meetings. Quick catch up meetings have more impact when standing, the same meeting while seated would take twice as long.</p>

<h3>Phone calls</h3>

<p>I&rsquo;m a pacer on the phone, so this is an easy one for me. It can be quite distracting for others, but I&rsquo;ll get most of my steps throughout the day just by talking on the phone.</p>

<h3>Poor man&rsquo;s adjustable desk</h3>

<p>This is crazy idea I&rsquo;ve had, that I think I&rsquo;d like to trial. I don&rsquo;t think I&rsquo;d code standing up, but there is a bunch of other stuff that I would do on a computer while standing. Clearing up email, project management, or testing comes to mind.</p>

<p>The premise of my idea is that my development work requires a beast of a machine, but other tasks may not. I&rsquo;d have two desks, or at least have access to a second.</p>

<h4>Desk One</h4>

<p>Desk One, as it has always been, comfy with massive computer in front of me.</p>

<h4>Desk Two</h4>

<p>More like a shelf or a &ldquo;hot desking&rdquo; coffee shop table at standing height, with an inexpensive laptop (like a Chromebook) setup.</p>

<p>Every time you want to perform an admin task, you get up and walk to your admin shelf. It really doesn&rsquo;t need to be much more than that, if you&rsquo;re going to start leaning, you&rsquo;re using the space for the wrong task.</p>

<h2>Conclusion</h2>

<p>I&rsquo;m really excited about setting up sprints. I like that I&rsquo;d be able communicate clearer expectations of when I&rsquo;m approachable to my co-workers, after understanding my own process more clearly.</p>

<p>I&rsquo;m also falling in love with the idea of an admin shelf, or maybe not an admin shelf, maybe an area that is more communal. A standing desk area, that by virtue of standing there says, &ldquo;Hey I&rsquo;m approachable&rdquo;.</p>

<h2>Conclusion on Conclusion</h2>

<p>What&rsquo;s weird about my conclusion, is that it doesn&rsquo;t talk about my ideas in context of standing more; which is the point of the post. I seem to be more concerned with disruptions in my workflow and being approachable to my co-workers. I think that&rsquo;s interesting, because for me, it&rsquo;s all interconnected.</p>

<p>By playing with these techniques, I don&rsquo;t just prevent the onset of having a fat arse, I also become more productive and collaborative in my work.</p>
]]></content>
  </entry>
  
</feed>
